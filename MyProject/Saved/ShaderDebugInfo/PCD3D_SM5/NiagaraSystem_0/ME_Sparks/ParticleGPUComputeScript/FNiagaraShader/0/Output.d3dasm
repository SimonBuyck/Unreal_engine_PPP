//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  372 Size:     4
//   float MaxTime_Emitter_ScaleAlpha_FloatCurve;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_ScaleAlpha_FloatCurve;// Offset:  380 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ScaleAlpha_FloatCurve;// Offset:  384 Size:     4
//   float MinTime_Emitter_ScaleFactorCurve;// Offset:  388 Size:     4
//   float MaxTime_Emitter_ScaleFactorCurve;// Offset:  392 Size:     4 [unused]
//   float InvTimeRange_Emitter_ScaleFactorCurve;// Offset:  396 Size:     4
//   float CurveLUTNumMinusOne_Emitter_ScaleFactorCurve;// Offset:  400 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat004_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat004_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat004_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:   12 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:   16 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   32 Size:    16
//   float4 Constants_Emitter_InitializeParticle_SpriteSize;// Offset:   48 Size:    16 [unused]
//   float Constants_Emitter_InitializeParticle_SpriteRotation;// Offset:   64 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   float Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_ManuallyEnteredDensityASC40kgASC47mASC943ASC41;// Offset:   96 Size:     4 [unused]
//   float Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_MassModulation;// Offset:  100 Size:     4
//   float4 Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_SpriteSizeModulation;// Offset:  112 Size:    16
//   float Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_Width;// Offset:  128 Size:     4
//   float Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_Height;// Offset:  132 Size:     4
//   float Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_Depth;// Offset:  136 Size:     4
//   float4 Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_ModelProportions;// Offset:  144 Size:    16 [unused]
//   float4 Constants_Emitter_CalculateSizeAndRotationalInertiaByMass_InitialModelDimensions;// Offset:  160 Size:    16 [unused]
//   float Constants_Emitter_UniformRangedFloat002_Minimum;// Offset:  176 Size:     4
//   float Constants_Emitter_UniformRangedFloat002_Maximum;// Offset:  180 Size:     4
//   int Constants_Emitter_UniformRangedFloat002_RandomSeed;// Offset:  184 Size:     4 [unused]
//   float Constants_Emitter_AddVelocityInCone_ConeAngle;// Offset:  188 Size:     4
//   float Constants_Emitter_AddVelocityInCone_VelocityDistributionAlongConeAxis;// Offset:  192 Size:     4
//   float4 Constants_Emitter_AddVelocityInCone_ConeAxis;// Offset:  208 Size:    16
//   float Constants_Emitter_AddVelocityInCone_VelocityFalloffAwayFromConeAxis;// Offset:  224 Size:     4
//   float4 Constants_Emitter_GravityForce_Gravity;// Offset:  240 Size:    16
//   float Constants_Emitter_Drag_Drag; // Offset:  256 Size:     4
//   float Constants_Emitter_Drag_RotationalDrag;// Offset:  260 Size:     4 [unused]
//   float Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  264 Size:     4
//   float4 Constants_Emitter_ScaleColor_ScaleRGB;// Offset:  272 Size:    16
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  288 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  292 Size:     4 [unused]
//   float Constants_Emitter_SpriteSizeScaleByVelocity_VelocityThreshold;// Offset:  296 Size:     4
//   float4 Constants_Emitter_SpriteSizeScaleByVelocity_MinScaleFactor;// Offset:  304 Size:    16
//   float4 Constants_Emitter_SpriteSizeScaleByVelocity_MaxScaleFactor;// Offset:  320 Size:    16
//   float Emitter_SpawnRate;           // Offset:  336 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Emitter_ScaleAlpha_FloatCurve    texture   float         buf             t2      1 
// CurveLUT_Emitter_ScaleFactorCurve    texture   float         buf             t3      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB4[21], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 14
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r1.zzzz, t0.yzxw
  ishl r1.xy, cb0[21].yyyy, l(3, 4, 0, 0)
  iadd r1.xy, r0.xxxx, r1.xyxx
  ld_indexable(buffer)(float,float,float,float) r2.w, r1.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.wwww, t0.xzyw
  imad r3.xyzw, l(10, 11, 12, 13), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.z, r3.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r3.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r3.wwww, t0.yxzw
  imad r4.xyzw, l(15, 17, 21, 22), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r5.x, r4.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r5.z, r4.yyyy, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.y, r4.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r3.z, r4.wwww, t0.yzxw
  imad r4.xyzw, l(23, 24, 25, 28), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.w, r4.xxxx, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r4.x, r4.yyyy, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r4.zzzz, t0.yxzw
  ld_indexable(buffer)(sint,sint,sint,sint) r4.z, r0.xxxx, t1.yzxw
  ld_indexable(buffer)(float,float,float,float) r6.x, r4.wwww, t0.xyzw
  imad r7.xy, l(29, 30, 0, 0), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r6.y, r7.xxxx, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.z, r7.yyyy, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r4.w, r1.w, l(0.000010)
  add r5.w, r4.w, l(-0.000100)
  lt r5.w, r0.w, r5.w
  div r4.w, r0.w, r4.w
  mul r7.xyz, r3.xxxx, cb4[15].xyzx
  add r6.w, r4.w, -cb0[23].y
  mul_sat r6.w, r6.w, cb0[23].w
  mul r7.w, r6.w, cb0[24].x
  round_ni r7.w, r7.w
  lt r8.x, r7.w, cb0[24].x
  add r8.y, r7.w, l(1.000000)
  movc r8.x, r8.x, r8.y, r7.w
  mad r6.w, r6.w, cb0[24].x, -r7.w
  ftou r7.w, r7.w
  ld_indexable(buffer)(float,float,float,float) r7.w, r7.wwww, t2.yzwx
  ftou r8.x, r8.x
  ld_indexable(buffer)(float,float,float,float) r8.x, r8.xxxx, t2.xyzw
  add r8.x, -r7.w, r8.x
  mad r6.w, r6.w, r8.x, r7.w
  mul r8.w, r6.w, cb4[16].z
  mov r8.xyz, cb4[17].xyzx
  mul r8.xyzw, r8.xyzw, r2.xyzw
  max r6.w, r3.x, l(0.000100)
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
  mul r7.xyz, r7.xyzx, r6.wwww
  mad r6.xyz, r7.xyzx, cb1[0].xxxx, r6.xyzx
  max r6.w, cb4[16].x, l(0.000000)
  mad r6.w, cb1[0].x, r6.w, l(1.000000)
  div r6.xyz, r6.xyzx, r6.wwww
  mad r5.xyz, r6.xyzx, cb1[0].xxxx, r5.xyzx
  dp3 r6.w, r6.xyzx, r6.xyzx
  sqrt r6.w, r6.w
  lt r7.x, r6.w, l(0.000010)
  max r7.y, cb4[18].z, l(0.000100)
  max r6.w, r6.w, l(0.000100)
  movc r6.w, r7.x, l(0.000100), r6.w
  min r6.w, r7.y, r6.w
  div r6.w, r6.w, r7.y
  add r6.w, r6.w, -cb0[24].y
  mul_sat r6.w, r6.w, cb0[24].w
  mul r7.x, r6.w, cb0[25].x
  round_ni r7.x, r7.x
  lt r7.y, r7.x, cb0[25].x
  add r7.z, r7.x, l(1.000000)
  movc r7.y, r7.y, r7.z, r7.x
  mad r6.w, r6.w, cb0[25].x, -r7.x
  ftou r7.x, r7.x
  ld_indexable(buffer)(float,float,float,float) r7.x, r7.xxxx, t3.xyzw
  ftou r7.y, r7.y
  ld_indexable(buffer)(float,float,float,float) r7.y, r7.yyyy, t3.yxzw
  add r7.y, -r7.x, r7.y
  mad_sat r6.w, r6.w, r7.y, r7.x
  add r7.xy, -cb4[19].xyxx, cb4[20].xyxx
  mad r7.xy, r6.wwww, r7.xyxx, cb4[19].xyxx
  mul r7.xy, r1.xzxx, r7.xyxx
  mov r6.w, r6.x
  mov r7.zw, r6.yyyz
else 
  uge r9.x, r0.x, r0.y
  and r0.z, r0.z, r9.x
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r9.xyzw, r0.xxxx, cb0[10].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r9.y, r9.x
    iadd r0.y, r9.z, r0.y
    iadd r0.y, r9.w, r0.y
    ige r9.xyzw, r0.xxxx, cb0[11].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r9.y, r9.x
    iadd r0.z, r9.z, r0.z
    iadd r0.z, r9.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r4.z, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r9.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r0.xyz, r0.xxxx, r9.xyzx, cb5[25].xyzx
    add r9.x, -cb4[0].x, cb4[0].y
    imul null, r10.x, vThreadID.x, l(0x0019660d)
    imul null, r10.y, cb0[9].z, l(0x0019660d)
    iadd r9.yz, r10.xxyx, l(0, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r10.xyzw, r9.yyyy, r9.yyyy, l(0x3c3c2745, 0x3c22c138, 0x3c095b2b, 0x3beff51e)
    imad r11.xyzw, r9.zzzz, r10.xyzw, r9.yyyy
    imad r12.xyzw, r10.xyzw, r11.xyzw, r9.zzzz
    imad r12.xyzw, r11.xyzw, r12.xyzw, r9.yyyy
    imad r10.xyzw, r11.xyzw, r12.xyzw, r10.xyzw
    ishr r10.xyzw, r10.xyzw, l(8, 8, 8, 8)
    and r10.xyzw, r10.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r10.xyzw, r10.xyzw
    mul r9.x, r9.x, r10.x
    mad r1.w, r9.x, l(0.000000), cb4[0].x
    add r9.x, -cb4[0].w, cb4[1].x
    mul r9.x, r9.x, r10.y
    mad r3.x, r9.x, l(0.000000), cb4[0].w
    mul r3.y, r10.z, l(0.000000)
    mul r9.x, cb4[6].y, l(8050.000000)
    add r9.w, cb4[8].y, cb4[8].x
    add r9.w, r9.w, cb4[8].z
    div r9.w, l(3.000000), r9.w
    mul r10.xy, r9.wwww, cb4[8].xyxx
    mul r10.xy, r10.xyxx, cb4[7].xyxx
    div r9.x, r3.x, r9.x
    mul r9.xw, r9.xxxx, l(1000000.000000, 0.000000, 0.000000, 0.127324)
    log r9.xw, r9.xxxw
    mul r9.xw, r9.xxxw, l(0.333333, 0.000000, 0.000000, 0.333333)
    exp r9.xw, r9.xxxw
    mul r1.xz, r9.xxxx, r10.xxyx
    mul r9.x, r3.x, l(0.400000)
    mul r9.w, r9.w, r9.w
    mul r1.y, r9.w, r9.x
    add r9.x, -cb4[11].x, cb4[11].y
    mul r9.x, r9.x, r10.w
    mad r9.x, r9.x, l(0.000000), cb4[11].x
    max r9.w, cb4[11].w, l(0.000010)
    imad r10.xyz, r9.yyyy, r9.yyyy, l(0x3bd68f11, 0x3bbd2904, 0x3ba3c2f7, 0)
    imad r11.xyz, r9.zzzz, r10.xyzx, r9.yyyy
    imad r12.xyz, r10.xyzx, r11.xyzx, r9.zzzz
    imad r12.xyz, r11.xyzx, r12.xyzx, r9.yyyy
    imad r10.xyz, r11.xyzx, r12.xyzx, r10.xyzx
    ishr r10.xyz, r10.xyzx, l(8, 8, 8, 0)
    and r10.xyz, r10.xyzx, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0)
    utof r10.xyz, r10.xyzx
    mul r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    log r9.y, r10.y
    mul r9.y, r9.y, cb4[12].x
    exp r9.y, r9.y
    min r9.z, r9.w, l(179.875000)
    mul r9.z, r9.z, l(0.008727)
    sincos r11.x, r12.x, r9.z
    div r9.z, r11.x, r12.x
    sincos r11.x, r12.x, r10.z
    mul r11.y, r10.x, r12.x
    mul r11.z, r10.x, r11.x
    mul r11.xy, r9.zzzz, r11.yzyy
    mul r10.yz, r9.yyyy, r11.xxyx
    dp3 r9.y, r10.xyzx, r10.xyzx
    sqrt r10.w, r9.y
    lt r9.y, r10.w, l(0.000010)
    movc r10.xyzw, r9.yyyy, l(1.000000,0,0,1.000000), r10.xyzw
    div r10.xyz, r10.yzxy, r10.wwww
    movc r10.xyz, r9.yyyy, l(0,0,1.000000,0), r10.xyzx
    mul r9.y, r9.w, l(0.008727)
    sincos null, r9.y, r9.y
    add r9.z, -r9.y, r10.z
    add r9.y, -r9.y, l(1.000000)
    div_sat r9.y, r9.z, r9.y
    dp3 r9.z, cb4[13].xyzx, cb4[13].xyzx
    rsq r9.z, r9.z
    mul r11.xyz, r9.zzzz, cb4[13].xyzx
    mul r12.xyz, r11.yyyy, cb2[17].xyzx
    mad r11.xyw, r11.xxxx, cb2[16].xyxz, r12.xyxz
    mad r11.xyz, r11.zzzz, cb2[18].xyzx, r11.xywx
    dp3 r9.z, r11.xyzx, r11.xyzx
    sqrt r9.z, r9.z
    add r12.w, r11.x, r9.z
    mul r9.z, r9.z, l(0.000340)
    ge r9.z, r12.w, r9.z
    mov r12.x, l(0)
    mul r12.yz, r11.zzyz, l(0.000000, -1.000000, 1.000000, 0.000000)
    movc r11.xyzw, r9.zzzz, r12.xyzw, l(0,0,1.000000,0)
    dp3 r9.z, r11.yzwy, r11.yzwy
    rsq r9.z, r9.z
    mul r11.xyzw, r9.zzzz, r11.xyzw
    dp4 r9.z, r11.yyzz, r10.xxyy
    dp2 r9.w, r11.yzyy, r11.yzyy
    mad r9.w, r11.w, r11.w, -r9.w
    mul r12.xyz, r10.zxyz, r9.wwww
    mad r12.xyz, r11.xyzx, r9.zzzz, r12.xyzx
    mul r13.xyz, r10.xyzx, r11.zxyz
    mad r10.xyz, r11.yzxy, r10.yzxy, -r13.xyzx
    add r9.z, r11.w, r11.w
    mad r10.xyz, r10.xyzx, r9.zzzz, r12.xyzx
    max r9.z, cb4[14].x, l(0.000100)
    log r9.y, r9.y
    mul r9.y, r9.y, r9.z
    exp r9.y, r9.y
    mul r9.x, r9.y, r9.x
    mul r9.xyz, r9.xxxx, r10.xyzx
    max r9.w, r1.w, l(0.000010)
    add r10.x, r9.w, l(-0.000100)
    lt r5.w, r0.w, r10.x
    div r4.w, r0.w, r9.w
    mul r10.xyz, r3.xxxx, cb4[15].xyzx
    add r9.w, r4.w, -cb0[23].y
    mul_sat r9.w, r9.w, cb0[23].w
    mul r10.w, r9.w, cb0[24].x
    round_ni r10.w, r10.w
    lt r11.x, r10.w, cb0[24].x
    add r11.y, r10.w, l(1.000000)
    movc r11.x, r11.x, r11.y, r10.w
    mad r9.w, r9.w, cb0[24].x, -r10.w
    ftou r10.w, r10.w
    ld_indexable(buffer)(float,float,float,float) r10.w, r10.wwww, t2.yzwx
    ftou r11.x, r11.x
    ld_indexable(buffer)(float,float,float,float) r11.x, r11.xxxx, t2.xyzw
    add r11.x, -r10.w, r11.x
    mad r9.w, r9.w, r11.x, r10.w
    mul r11.w, r9.w, cb4[16].z
    mov r11.xyz, cb4[17].xyzx
    mul r8.xyzw, r11.xyzw, cb4[2].xyzw
    max r9.w, r3.x, l(0.000100)
    div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
    mul r10.xyz, r10.xyzx, r9.wwww
    mad r9.xyz, r10.xyzx, r0.wwww, r9.xyzx
    max r9.w, cb4[16].x, l(0.000000)
    mad r9.w, r0.w, r9.w, l(1.000000)
    div r6.xyz, r9.xyzx, r9.wwww
    mad r5.xyz, r6.xyzx, r0.wwww, r0.xyzx
    dp3 r0.x, r6.xyzx, r6.xyzx
    sqrt r0.x, r0.x
    lt r0.y, r0.x, l(0.000010)
    max r0.z, cb4[18].z, l(0.000100)
    max r0.x, r0.x, l(0.000100)
    movc r0.x, r0.y, l(0.000100), r0.x
    min r0.x, r0.z, r0.x
    div r0.x, r0.x, r0.z
    add r0.x, r0.x, -cb0[24].y
    mul_sat r0.x, r0.x, cb0[24].w
    mul r0.y, r0.x, cb0[25].x
    round_ni r0.y, r0.y
    lt r0.z, r0.y, cb0[25].x
    add r9.x, r0.y, l(1.000000)
    movc r0.z, r0.z, r9.x, r0.y
    mad r0.x, r0.x, cb0[25].x, -r0.y
    ftou r0.y, r0.y
    ld_indexable(buffer)(float,float,float,float) r0.y, r0.yyyy, t3.yxzw
    ftou r0.z, r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.zzzz, t3.yzxw
    add r0.z, -r0.y, r0.z
    mad_sat r0.x, r0.x, r0.z, r0.y
    add r0.yz, -cb4[19].xxyx, cb4[20].xxyx
    mad r0.xy, r0.xxxx, r0.yzyy, cb4[19].xyxx
    mul r7.xy, r1.xzxx, r0.xyxx
    mov r2.xyzw, cb4[2].xyzw
    mov r6.w, r6.x
    mov r7.zw, r6.yyyz
    mov r3.zw, l(0,0,1.000000,1.000000)
    mov r4.x, l(1.000000)
  else 
    mov r0.w, l(0)
    mov r8.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r1.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r7.xyzw, l(0,0,0,0)
    mov r4.xzw, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
    mov r5.xyzw, l(0,0,0,0)
  endif 
  mov r4.y, l(0)
endif 
and r0.x, r5.w, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r9.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r9.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r9.w, r9.y, l(0), g0.xxxx
  iadd r9.w, r0.y, r9.w
  ld_structured r10.x, r9.z, l(0), g0.xxxx
  iadd r10.x, r9.w, r10.x
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r9.x, l(0), r0.x
  store_structured g0.x, r9.y, l(0), r0.y
  store_structured g0.x, r9.z, l(0), r9.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r10.x
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r9.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r9.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r9.w, r9.y, l(0), g1.xxxx
  iadd r9.w, r0.z, r9.w
  ld_structured r10.x, r9.z, l(0), g1.xxxx
  iadd r10.x, r9.w, r10.x
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r9.x, l(0), r0.y
  store_structured g1.x, r9.y, l(0), r0.z
  store_structured g1.x, r9.z, l(0), r9.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r10.x
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r9.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r9.x
endif 
sync_g_t
if_nz r5.w
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r8.xxxx
  ishl r9.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r9.xyzw, r0.xxxx, r9.xyzw
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r8.yyyy
  imad r10.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r8.zzzz
  store_uav_typed u1.xyzw, r9.yyyy, r8.wwww
  store_uav_typed u1.xyzw, r10.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r10.zzzz, r2.yyyy
  store_uav_typed u1.xyzw, r10.wwww, r2.zzzz
  store_uav_typed u1.xyzw, r9.zzzz, r2.wwww
  imad r2.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r1.xxxx
  store_uav_typed u1.xyzw, r2.yyyy, r1.zzzz
  store_uav_typed u1.xyzw, r2.zzzz, r1.wwww
  store_uav_typed u1.xyzw, r2.wwww, r3.xxxx
  imad r2.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r3.yyyy
  store_uav_typed u1.xyzw, r2.yyyy, r4.wwww
  store_uav_typed u1.xyzw, r2.zzzz, r5.xxxx
  store_uav_typed u1.xyzw, r9.wwww, r5.yyyy
  store_uav_typed u1.xyzw, r2.wwww, r5.zzzz
  imad r2.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r2.xyzw, r2.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r2.xxxx, r6.wwww
  store_uav_typed u1.xyzw, r2.yyyy, r7.zzzz
  store_uav_typed u1.xyzw, r2.zzzz, r7.wwww
  store_uav_typed u1.xyzw, r2.wwww, r1.yyyy
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.zzzz
  store_uav_typed u1.xyzw, r1.yyyy, r3.wwww
  store_uav_typed u1.xyzw, r1.zzzz, r4.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r4.yyyy
  imad r1.xyzw, l(26, 27, 28, 29), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r7.xxxx
  store_uav_typed u1.xyzw, r1.yyyy, r7.yyyy
  store_uav_typed u0.xyzw, r0.yyyy, r4.zzzz
  store_uav_typed u1.xyzw, r1.zzzz, r6.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r6.yyyy
  imad r0.x, l(30), cb0[21].z, r0.x
  iadd r0.x, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.xxxx, r6.zzzz
endif 
ret 
// Approximately 405 instruction slots used
